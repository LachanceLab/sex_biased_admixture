#!/usr/bin/env python
import matplotlib.pyplot as plt
from matplotlib.lines import Line2D
import sys 
import argparse
import pandas as pd
import numpy as np
import os
import re


def visualize_pcs(eigenvecs, outfile, pc_a=1, pc_b=2):
    """
    Visualize PCA done with plink
    :param eigenvecs: str, path to .eigenvecs file
    :param outfile: str, where to save Figure to
    :param pc_a: int, first PC to plot
    :param pc_b: int, second PC to plot
    """
    num_pop = eigenvecs.population.unique().shape[0]
    populations = eigenvecs.population.unique()
    np.random.seed(1)
    colors = [(np.random.random(), np.random.random(), np.random.random()) for i in range(num_pop)]
    color_dict = {populations[i]: colors[i] for i in range(num_pop)}
    colors = np.array([color_dict[pop] for pop in eigenvecs.population])
    fig, ax = plt.subplots()
    ax.scatter(eigenvecs.loc[:, f'PC{pc_a}'], eigenvecs.loc[:, f'PC{pc_b}'], color=colors)
    ax.set_xlabel(f'PC{pc_a}')
    ax.set_ylabel(f'PC{pc_b}')
    legend_elements = [Line2D([0], [0], color=color_dict[pop], marker='o', label=pop.upper()) for pop in populations]
    ax.legend(handles=legend_elements, loc='upper center', ncol=4, bbox_to_anchor=(0.5, -.14))
    fig.savefig(outfile, bbox_inches='tight')
    plt.close()


def main(argv):
    parser = argparse.ArgumentParser(description='Visualize PCA performed with plink2')
    parser.add_argument('--eigenvec', nargs='+', help='.eigenvec file that were generated by plink. '
                                                      'You can specify multiple separated by a space')
    parser.add_argument('--plot_dir', help='Directory where to save plots')
    args = parser.parse_args()
    if args.plot_dir.endswith('/'):
        plot_dir = args.plot_dir
    else:
        plot_dir = args.plot_dir + '/'
    if not os.path.isdir(plot_dir):
        os.makedirs(plot_dir)
    eigenvec_files=sorted(args.eigenvec)
    for eigenvec in eigenvec_files:
        eigenvectors = pd.read_csv(eigenvec, sep='\t')
        eigenvectors.set_index('#IID', inplace=True)
        populations = np.array([re.sub('[0-9]*', '', ind) for ind in eigenvectors.index.values])
        eigenvectors.loc[:, 'population'] = populations
        outfile = plot_dir + eigenvec.split('/')[-1].split('.eigenvec')[0] + "_pca.png"
        visualize_pcs(eigenvectors, outfile)  


if __name__ == '__main__':
    main(sys.argv[1:])

